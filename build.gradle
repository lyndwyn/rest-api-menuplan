buildscript {
	ext {
		springBootVersion = "2.1.0.M1"
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	// flyway
    id "org.flywaydb.flyway" version "5.1.4"
    
    // gradle
    id "net.ltgt.apt" version "0.20"
}

apply plugin: "java"
apply plugin: "eclipse"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"
apply plugin: 'net.ltgt.apt-eclipse'

group = 'ch.ilge'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 10

repositories {
	mavenCentral()
	mavenLocal()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}

ext {
	mapstructVersion = "1.3.0.Final"
}

dependencies {
	/*
	 * Compile
	 */
	// Spring Boot
	compile "org.springframework.boot:spring-boot-starter-data-jpa"
	compile "org.springframework.boot:spring-boot-starter-security"
	compile "org.springframework.boot:spring-boot-starter-web"
	
	// JWT
	compile "io.jsonwebtoken:jjwt:0.7.0"
	
	// MapStruct
	//compile "org.mapstruct:mapstruct-jdk8:${mapstructVersion}"
	//apt "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    // Testing
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	
	// Swagger
	compile "io.springfox:springfox-swagger2:2.9.2"
	compile "io.springfox:springfox-swagger-ui:2.9.2"
	
	// Flyway
	compile "org.flywaydb:flyway-core:5.1.4"
	
	// Jackson ObjectMapper (JSON)
	compile "com.fasterxml.jackson.core:jackson-databind:2.9.6"
	
	// JAXB (XML)
	compile "javax.xml.bind:jaxb-api:2.4.0-b180725.0427"
	
	// PosgreSQL
	compile "org.postgresql:postgresql:42.2.4"
	
	/*
	 * Test
	 */
	// Spring Boot testing
	testCompile "org.springframework.boot:spring-boot-starter-test"
	testCompile "org.springframework.security:spring-security-test"
	
	// AssertJ
	testCompile "org.assertj:assertj-core:3.11.1"
	
	// H2 Database Engine
	testCompile "com.h2database:h2:1.4.194"
	
	// mockito
	testCompile "org.mockito:mockito-core:2.21.0"
	
	testCompile 'io.rest-assured:rest-assured:3.3.0'
	compile 'io.rest-assured:json-path:3.3.0'
	compile 'io.rest-assured:xml-path:3.3.0'
	testCompile 'io.rest-assured:json-schema-validator:3.3.0'
	testCompile 'io.rest-assured:spring-web-test-client:3.3.0'
	testCompile 'io.rest-assured:scala-support:3.3.0'
	
	// https://mvnrepository.com/artifact/com.jayway.jsonpath/json-path need this?
	//compile group: 'com.jayway.jsonpath', name: 'json-path', version: '2.4.0'
	
	// https://mvnrepository.com/artifact/org.skyscreamer/jsonassert
	testCompile group: 'org.skyscreamer', name: 'jsonassert', version: '1.2.3'	
	
}

task wrapper(type: Wrapper) {
    gradleVersion = '5.2.1'
    doLast {
    	println ':wrapper-type-lookup'
   }
}

//Flyway Configuration
import java.util.Properties
def props = new Properties()
file('src/main/resources/application.properties').withInputStream {
   props.load(it)
}

flyway {
    url = props['spring.datasource.url']
    user = props['spring.datasource.username']
    password = props['spring.datasource.password']
	validateOnMigrate = true

	//executes production sql sripts
	locations = ["filesystem:$project.projectDir/src/main/resources/db/migration/production"]
}

task flywayMigrateDev(dependsOn: flywayMigrate) {
	description 'Migrates the schema to the latest version and inserts test data for the development.'
	group 'flyway'
}

task setMigrateDev() {
	doLast {
		flyway {
			url = props['spring.datasource.url']
    		user = props['spring.datasource.username']
    		password = props['spring.datasource.password']
			validateOnMigrate = true

			//executes production and development sql scripts
			locations = ["filesystem:$project.projectDir/src/main/resources/db/migration/production", "filesystem:$project.projectDir/src/main/resources/db/migration/development"]
		}
	}
}

flywayMigrateDev.dependsOn setMigrateDev
flywayMigrate.mustRunAfter setMigrateDev